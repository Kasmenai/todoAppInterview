{"version":3,"sources":["TodoForm/useInputState.js","TodoForm/index.js","TodoList/index.js","TodoFilter/index.js","App/useTodoState.js","App/useFilterState.js","App/index.js","index.js"],"names":["useInputState","initialValue","useState","value","setValue","onChange","e","target","reset","TodoForm","saveTodo","className","onSubmit","preventDefault","todoText","trim","placeholder","type","TodoList","todos","deleteTodo","toggleCompleteTodo","map","todo","isCompleted","title","checked","id","text","onClick","filterItems","name","label","FilterItem","filter","currentFilter","onFilterChange","TodoFilter","item","useTodoState","initialState","setTodos","addTodo","uuidv4","newTodos","useFilterState","setFilter","App","visibleTodos","filterTodos","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.231e0e5e.chunk.js","sourcesContent":["import { useState } from 'react';\n\nconst useInputState = (initialValue) => {\n  const [value, setValue] = useState(initialValue);\n  return {\n    value,\n    onChange: (e) => setValue(e.target.value),\n    reset: () => setValue(''),\n  };\n};\n\nexport default useInputState;\n","import React from 'react';\nimport useInputState from './useInputState';\n\nimport './style.css';\n\nconst TodoForm = ({ saveTodo }) => {\n  const { value, onChange, reset } = useInputState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const todoText = value.trim();\n\n    if (!todoText) return;\n\n    saveTodo(todoText);\n    reset();\n  };\n\n  return (\n    <form className=\"search-form\" onSubmit={handleSubmit}>\n      <input\n        className=\"search-input\"\n        value={value}\n        onChange={onChange}\n        placeholder=\"Add some todo\"\n        type=\"text\"\n      />\n    </form>\n  );\n};\n\nexport default TodoForm;\n","import React from 'react';\nimport './style.css';\n\nconst TodoList = ({ todos, deleteTodo, toggleCompleteTodo }) => {\n  return (\n    <ul className=\"list\">\n      {todos.map((todo) => {\n        return (\n          <li className=\"list-item\" key={todo.id}>\n            <label\n              className={`list-label${todo.isCompleted ? ' completed' : ''}`}\n            >\n              <input\n                className=\"list-control\"\n                title=\"mark as done\"\n                type=\"checkbox\"\n                checked={todo.isCompleted}\n                onChange={() => toggleCompleteTodo(todo.id)}\n              />\n              {todo.text}\n            </label>\n            <button\n              className=\"btn\"\n              title=\"delete\"\n              type=\"button\"\n              onClick={() => deleteTodo(todo.id)}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import React from 'react';\n\nimport './style.css';\n\nconst filterItems = [\n  { name: 'all', label: 'All' },\n  { name: 'active', label: 'Active' },\n  { name: 'completed', label: 'Completed' },\n];\n\nexport const filterTodos = (filter, todos) => {\n  switch (filter.name) {\n    case 'completed':\n      return todos.filter((todo) => todo.isCompleted);\n    case 'active':\n      return todos.filter((todo) => !todo.isCompleted);\n    default:\n      return todos;\n  }\n};\n\nconst FilterItem = ({ filter, currentFilter, onFilterChange }) => {\n  return (\n    <label className=\"filter-item\">\n      <input\n        className=\"filter-input\"\n        type=\"radio\"\n        name=\"filter\"\n        value={filter.name}\n        checked={filter.name === currentFilter.name}\n        onChange={(e) => onFilterChange(filter)}\n      />\n      {filter.label}\n    </label>\n  );\n};\n\nconst TodoFilter = ({ currentFilter, onFilterChange }) => {\n  return (\n    <div className=\"filters\">\n      {filterItems.map((item) => (\n        <FilterItem\n          key={item.name}\n          filter={item}\n          currentFilter={currentFilter}\n          onFilterChange={onFilterChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default TodoFilter;\n","import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst useTodoState = (initialState) => {\n  const [todos, setTodos] = useState(initialState);\n\n  return {\n    todos,\n    addTodo: (text) =>\n      setTodos([...todos, { text, isCompleted: false, id: uuidv4() }]),\n    deleteTodo: (id) => {\n      const newTodos = todos.filter((todo) => todo.id !== id);\n      setTodos(newTodos);\n    },\n    toggleCompleteTodo: (id) => {\n      const newTodos = todos.map((todo) => {\n        if (todo.id === id) {\n          todo.isCompleted = !todo.isCompleted;\n        }\n        return todo;\n      });\n      setTodos(newTodos);\n    },\n  };\n};\n\nexport default useTodoState;\n","import { useState } from 'react';\n\nconst useFilterState = (initialValue) => {\n  const [filter, setFilter] = useState(initialValue);\n  return {\n    filter,\n    onFilterChange: (filter) => setFilter(filter),\n  };\n};\n\nexport default useFilterState;\n","import React from 'react';\nimport TodoForm from '../TodoForm';\nimport TodoList from '../TodoList';\nimport TodoFilter, { filterTodos } from '../TodoFilter';\nimport useTodoState from './useTodoState';\nimport useFilterState from './useFilterState';\n\nimport './style.css';\n\nfunction App() {\n  const { todos, addTodo, deleteTodo, toggleCompleteTodo } = useTodoState([]);\n\n  const { filter, onFilterChange } = useFilterState({\n    name: 'all',\n    label: 'All',\n  });\n\n  const visibleTodos = filterTodos(filter, todos);\n\n  return (\n    <div className=\"app\">\n      <h1>Todo app</h1>\n      <TodoForm saveTodo={addTodo} />\n      <TodoFilter currentFilter={filter} onFilterChange={onFilterChange} />\n      {todos.length > 0 && (\n        <TodoList\n          todos={visibleTodos}\n          deleteTodo={deleteTodo}\n          toggleCompleteTodo={toggleCompleteTodo}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}